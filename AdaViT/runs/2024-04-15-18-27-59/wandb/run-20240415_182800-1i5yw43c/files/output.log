Archive found at AdaViT/imagenette_dataset/imagenette.zip, skipping download
Extracted file found at AdaViT/imagenette_dataset/imagenette2-160, skipping extraction
Warning: num_classes is not used for Imagenette dataset.
Ignoring the argument and using default number of classes in this dataset (10).
Loading timm pretrained weights:  ['facebookresearch/deit:main', 'deit_tiny_patch16_224']
Downloading timm pretrained weights:  ['facebookresearch/deit:main', 'deit_tiny_patch16_224']
Loading weights for a different number of classes. Replacing head with random weights. You should fine-tune the model.
The Model is:  AdaptiveVisionTransformer(
  (conv_proj): Conv2d(3, 192, kernel_size=(16, 16), stride=(16, 16))
  (encoder): AViTEncoder(
    (dropout): Dropout(p=0.0, inplace=False)
    (layers): ModuleList(
      (0-11): 12 x AViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
    )
    (ln): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
  )
  (head): Linear(in_features=192, out_features=10, bias=True)
)
Reinitializing class_tokens... Reinitialized!
Freezing all parameters except for those containing any of these words in their names:  ['gate', 'class', 'head', 'threshold', 'budget']
Trainable parameters: ['class_tokens', 'head.weight', 'head.bias']
Frozen parameters: ['conv_proj.weight', 'conv_proj.bias', 'encoder.pos_embedding', 'encoder.layers.0.ln_1.weight', 'encoder.layers.0.ln_1.bias', 'encoder.layers.0.self_attention.self_attention.in_proj_weight', 'encoder.layers.0.self_attention.self_attention.in_proj_bias', 'encoder.layers.0.self_attention.self_attention.out_proj.weight', 'encoder.layers.0.self_attention.self_attention.out_proj.bias', 'encoder.layers.0.ln_2.weight', 'encoder.layers.0.ln_2.bias', 'encoder.layers.0.mlp.fc1.weight', 'encoder.layers.0.mlp.fc1.bias', 'encoder.layers.0.mlp.fc2.weight', 'encoder.layers.0.mlp.fc2.bias', 'encoder.layers.1.ln_1.weight', 'encoder.layers.1.ln_1.bias', 'encoder.layers.1.self_attention.self_attention.in_proj_weight', 'encoder.layers.1.self_attention.self_attention.in_proj_bias', 'encoder.layers.1.self_attention.self_attention.out_proj.weight', 'encoder.layers.1.self_attention.self_attention.out_proj.bias', 'encoder.layers.1.ln_2.weight', 'encoder.layers.1.ln_2.bias', 'encoder.layers.1.mlp.fc1.weight', 'encoder.layers.1.mlp.fc1.bias', 'encoder.layers.1.mlp.fc2.weight', 'encoder.layers.1.mlp.fc2.bias', 'encoder.layers.2.ln_1.weight', 'encoder.layers.2.ln_1.bias', 'encoder.layers.2.self_attention.self_attention.in_proj_weight', 'encoder.layers.2.self_attention.self_attention.in_proj_bias', 'encoder.layers.2.self_attention.self_attention.out_proj.weight', 'encoder.layers.2.self_attention.self_attention.out_proj.bias', 'encoder.layers.2.ln_2.weight', 'encoder.layers.2.ln_2.bias', 'encoder.layers.2.mlp.fc1.weight', 'encoder.layers.2.mlp.fc1.bias', 'encoder.layers.2.mlp.fc2.weight', 'encoder.layers.2.mlp.fc2.bias', 'encoder.layers.3.ln_1.weight', 'encoder.layers.3.ln_1.bias', 'encoder.layers.3.self_attention.self_attention.in_proj_weight', 'encoder.layers.3.self_attention.self_attention.in_proj_bias', 'encoder.layers.3.self_attention.self_attention.out_proj.weight', 'encoder.layers.3.self_attention.self_attention.out_proj.bias', 'encoder.layers.3.ln_2.weight', 'encoder.layers.3.ln_2.bias', 'encoder.layers.3.mlp.fc1.weight', 'encoder.layers.3.mlp.fc1.bias', 'encoder.layers.3.mlp.fc2.weight', 'encoder.layers.3.mlp.fc2.bias', 'encoder.layers.4.ln_1.weight', 'encoder.layers.4.ln_1.bias', 'encoder.layers.4.self_attention.self_attention.in_proj_weight', 'encoder.layers.4.self_attention.self_attention.in_proj_bias', 'encoder.layers.4.self_attention.self_attention.out_proj.weight', 'encoder.layers.4.self_attention.self_attention.out_proj.bias', 'encoder.layers.4.ln_2.weight', 'encoder.layers.4.ln_2.bias', 'encoder.layers.4.mlp.fc1.weight', 'encoder.layers.4.mlp.fc1.bias', 'encoder.layers.4.mlp.fc2.weight', 'encoder.layers.4.mlp.fc2.bias', 'encoder.layers.5.ln_1.weight', 'encoder.layers.5.ln_1.bias', 'encoder.layers.5.self_attention.self_attention.in_proj_weight', 'encoder.layers.5.self_attention.self_attention.in_proj_bias', 'encoder.layers.5.self_attention.self_attention.out_proj.weight', 'encoder.layers.5.self_attention.self_attention.out_proj.bias', 'encoder.layers.5.ln_2.weight', 'encoder.layers.5.ln_2.bias', 'encoder.layers.5.mlp.fc1.weight', 'encoder.layers.5.mlp.fc1.bias', 'encoder.layers.5.mlp.fc2.weight', 'encoder.layers.5.mlp.fc2.bias', 'encoder.layers.6.ln_1.weight', 'encoder.layers.6.ln_1.bias', 'encoder.layers.6.self_attention.self_attention.in_proj_weight', 'encoder.layers.6.self_attention.self_attention.in_proj_bias', 'encoder.layers.6.self_attention.self_attention.out_proj.weight', 'encoder.layers.6.self_attention.self_attention.out_proj.bias', 'encoder.layers.6.ln_2.weight', 'encoder.layers.6.ln_2.bias', 'encoder.layers.6.mlp.fc1.weight', 'encoder.layers.6.mlp.fc1.bias', 'encoder.layers.6.mlp.fc2.weight', 'encoder.layers.6.mlp.fc2.bias', 'encoder.layers.7.ln_1.weight', 'encoder.layers.7.ln_1.bias', 'encoder.layers.7.self_attention.self_attention.in_proj_weight', 'encoder.layers.7.self_attention.self_attention.in_proj_bias', 'encoder.layers.7.self_attention.self_attention.out_proj.weight', 'encoder.layers.7.self_attention.self_attention.out_proj.bias', 'encoder.layers.7.ln_2.weight', 'encoder.layers.7.ln_2.bias', 'encoder.layers.7.mlp.fc1.weight', 'encoder.layers.7.mlp.fc1.bias', 'encoder.layers.7.mlp.fc2.weight', 'encoder.layers.7.mlp.fc2.bias', 'encoder.layers.8.ln_1.weight', 'encoder.layers.8.ln_1.bias', 'encoder.layers.8.self_attention.self_attention.in_proj_weight', 'encoder.layers.8.self_attention.self_attention.in_proj_bias', 'encoder.layers.8.self_attention.self_attention.out_proj.weight', 'encoder.layers.8.self_attention.self_attention.out_proj.bias', 'encoder.layers.8.ln_2.weight', 'encoder.layers.8.ln_2.bias', 'encoder.layers.8.mlp.fc1.weight', 'encoder.layers.8.mlp.fc1.bias', 'encoder.layers.8.mlp.fc2.weight', 'encoder.layers.8.mlp.fc2.bias', 'encoder.layers.9.ln_1.weight', 'encoder.layers.9.ln_1.bias', 'encoder.layers.9.self_attention.self_attention.in_proj_weight', 'encoder.layers.9.self_attention.self_attention.in_proj_bias', 'encoder.layers.9.self_attention.self_attention.out_proj.weight', 'encoder.layers.9.self_attention.self_attention.out_proj.bias', 'encoder.layers.9.ln_2.weight', 'encoder.layers.9.ln_2.bias', 'encoder.layers.9.mlp.fc1.weight', 'encoder.layers.9.mlp.fc1.bias', 'encoder.layers.9.mlp.fc2.weight', 'encoder.layers.9.mlp.fc2.bias', 'encoder.layers.10.ln_1.weight', 'encoder.layers.10.ln_1.bias', 'encoder.layers.10.self_attention.self_attention.in_proj_weight', 'encoder.layers.10.self_attention.self_attention.in_proj_bias', 'encoder.layers.10.self_attention.self_attention.out_proj.weight', 'encoder.layers.10.self_attention.self_attention.out_proj.bias', 'encoder.layers.10.ln_2.weight', 'encoder.layers.10.ln_2.bias', 'encoder.layers.10.mlp.fc1.weight', 'encoder.layers.10.mlp.fc1.bias', 'encoder.layers.10.mlp.fc2.weight', 'encoder.layers.10.mlp.fc2.bias', 'encoder.layers.11.ln_1.weight', 'encoder.layers.11.ln_1.bias', 'encoder.layers.11.self_attention.self_attention.in_proj_weight', 'encoder.layers.11.self_attention.self_attention.in_proj_bias', 'encoder.layers.11.self_attention.self_attention.out_proj.weight', 'encoder.layers.11.self_attention.self_attention.out_proj.bias', 'encoder.layers.11.ln_2.weight', 'encoder.layers.11.ln_2.bias', 'encoder.layers.11.mlp.fc1.weight', 'encoder.layers.11.mlp.fc1.bias', 'encoder.layers.11.mlp.fc2.weight', 'encoder.layers.11.mlp.fc2.bias', 'encoder.ln.weight', 'encoder.ln.bias']
Using cache found in /home/studio-lab-user/.cache/torch/hub/facebookresearch_deit_main














Training epoch 0: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:31<00:00,  2.38it/s]


Validation epoch 0 : 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 31/31 [00:06<00:00,  5.08it/s]
Training epoch 1:   0%|                                                                                                                                                                                                                   | 0/74 [00:00<?, ?it/s]
Saving training state for epoch 0.
[WARNING] Plotting masks is only supported for models with a budget. Skipping...














Training epoch 1: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.46it/s]
Training epoch 2:   0%|                                                                                                                                                                                                                   | 0/74 [00:00<?, ?it/s]














Training epoch 2: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.46it/s]
Training epoch 3:   0%|                                                                                                                                                                                                                   | 0/74 [00:00<?, ?it/s]














Training epoch 3: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]
Training epoch 4:   0%|                                                                                                                                                                                                                   | 0/74 [00:00<?, ?it/s]














Training epoch 4: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]

Training epoch 5:   4%|████████▏                                                                                                                                                                                                  | 3/74 [00:01<00:41,  1.71it/s]














Training epoch 5: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]
Training epoch 6:   1%|██▋                                                                                                                                                                                                        | 1/74 [00:01<01:33,  1.28s/it]














Training epoch 6: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]
Training epoch 7:   1%|██▋                                                                                                                                                                                                        | 1/74 [00:01<01:30,  1.24s/it]














Training epoch 7: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]
Training epoch 8:   1%|██▋                                                                                                                                                                                                        | 1/74 [00:01<01:28,  1.21s/it]














Training epoch 8: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]
Training epoch 9:   0%|                                                                                                                                                                                                                   | 0/74 [00:00<?, ?it/s]














Training epoch 9:  96%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊        | 71/74 [00:28<00:01,  2.53it/s]
Training epoch 9: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]














Training epoch 10:  96%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊        | 71/74 [00:28<00:01,  2.53it/s]
Saving training state for epoch 10.
[WARNING] Plotting masks is only supported for models with a budget. Skipping...
Training epoch 10: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]














Training epoch 11:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏          | 70/74 [00:28<00:01,  2.52it/s]
Training epoch 11: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.44it/s]














Training epoch 12:  93%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍             | 69/74 [00:28<00:01,  2.52it/s]
Training epoch 12: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]














Training epoch 13:  93%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍             | 69/74 [00:28<00:01,  2.52it/s]
Training epoch 13: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.45it/s]














Training epoch 14: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 74/74 [00:30<00:00,  2.44it/s]
Training epoch 15:   0%|                                                                                                                                                                                                                  | 0/74 [00:00<?, ?it/s]











Training epoch 15:  76%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                 | 56/74 [00:23<00:07,  2.37it/s]
Traceback (most recent call last):
  File "/home/studio-lab-user/sagemaker-studiolab-notebooks/AdaViT/train/train.py", line 225, in <module>
    train()
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/home/studio-lab-user/.conda/envs/studiolab/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/studio-lab-user/sagemaker-studiolab-notebooks/AdaViT/train/train.py", line 203, in train
    train_epoch(model, train_loader, optimizer, epoch)
  File "/home/studio-lab-user/sagemaker-studiolab-notebooks/AdaViT/train/train.py", line 125, in train_epoch
    logger.log({'train/total_loss': loss.detach().item(), 'train/classification_loss': main_loss.detach().item()} | add_loss_dict)
KeyboardInterrupt