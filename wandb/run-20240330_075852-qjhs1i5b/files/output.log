I arrive here
I arrive here 0:  sagemaker-studiolab-notebooks/AdaViT/configs/train_config.yaml
Error: [Errno 2] No such file or directory: 'sagemaker-studiolab-notebooks/AdaViT/configs/train_config.yaml'
I arrive here 2
The settings is:  {}
Archive found at AdaViT/imagenette_dataset/imagenette.zip, skipping download
Extracted file found at AdaViT/imagenette_dataset/imagenette2-160, skipping extraction
Warning: num_classes is not used for Imagenette dataset.
Ignoring the argument and using default number of classes in this dataset (10).
Loading timm pretrained weights:  ['facebookresearch/deit:main', 'deit_tiny_patch16_224']
Downloading timm pretrained weights:  ['facebookresearch/deit:main', 'deit_tiny_patch16_224']
Loading weights for a different number of classes. Replacing head with random weights. You should fine-tune the model.
The Model is:  VisionTransformer(
  (conv_proj): Conv2d(3, 192, kernel_size=(16, 16), stride=(16, 16))
  (encoder): ViTEncoder(
    (dropout): Dropout(p=0.0, inplace=False)
    (layers): Sequential(
      (0): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (1): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (2): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (3): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (4): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (5): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (6): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (7): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (8): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (9): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (10): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
      (11): ViTBlock(
        (ln_1): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (self_attention): SelfAttention(
          (self_attention): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=192, out_features=192, bias=True)
          )
        )
        (dropout): Dropout(p=0.0, inplace=False)
        (ln_2): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
        (mlp): MLP(
          (fc1): Linear(in_features=192, out_features=768, bias=True)
          (fc2): Linear(in_features=768, out_features=192, bias=True)
        )
      )
    )
    (ln): LayerNorm((192,), eps=1e-05, elementwise_affine=True)
  )
  (head): Linear(in_features=192, out_features=10, bias=True)
)
Reinitializing class_tokens... Reinitialized!
Freezing all parameters except for those containing any of these words in their names:  ['gate', 'class', 'head', 'threshold', 'budget']
Trainable parameters: ['class_tokens', 'head.weight', 'head.bias']
Frozen parameters: ['conv_proj.weight', 'conv_proj.bias', 'encoder.pos_embedding', 'encoder.layers.0.ln_1.weight', 'encoder.layers.0.ln_1.bias', 'encoder.layers.0.self_attention.self_attention.in_proj_weight', 'encoder.layers.0.self_attention.self_attention.in_proj_bias', 'encoder.layers.0.self_attention.self_attention.out_proj.weight', 'encoder.layers.0.self_attention.self_attention.out_proj.bias', 'encoder.layers.0.ln_2.weight', 'encoder.layers.0.ln_2.bias', 'encoder.layers.0.mlp.fc1.weight', 'encoder.layers.0.mlp.fc1.bias', 'encoder.layers.0.mlp.fc2.weight', 'encoder.layers.0.mlp.fc2.bias', 'encoder.layers.1.ln_1.weight', 'encoder.layers.1.ln_1.bias', 'encoder.layers.1.self_attention.self_attention.in_proj_weight', 'encoder.layers.1.self_attention.self_attention.in_proj_bias', 'encoder.layers.1.self_attention.self_attention.out_proj.weight', 'encoder.layers.1.self_attention.self_attention.out_proj.bias', 'encoder.layers.1.ln_2.weight', 'encoder.layers.1.ln_2.bias', 'encoder.layers.1.mlp.fc1.weight', 'encoder.layers.1.mlp.fc1.bias', 'encoder.layers.1.mlp.fc2.weight', 'encoder.layers.1.mlp.fc2.bias', 'encoder.layers.2.ln_1.weight', 'encoder.layers.2.ln_1.bias', 'encoder.layers.2.self_attention.self_attention.in_proj_weight', 'encoder.layers.2.self_attention.self_attention.in_proj_bias', 'encoder.layers.2.self_attention.self_attention.out_proj.weight', 'encoder.layers.2.self_attention.self_attention.out_proj.bias', 'encoder.layers.2.ln_2.weight', 'encoder.layers.2.ln_2.bias', 'encoder.layers.2.mlp.fc1.weight', 'encoder.layers.2.mlp.fc1.bias', 'encoder.layers.2.mlp.fc2.weight', 'encoder.layers.2.mlp.fc2.bias', 'encoder.layers.3.ln_1.weight', 'encoder.layers.3.ln_1.bias', 'encoder.layers.3.self_attention.self_attention.in_proj_weight', 'encoder.layers.3.self_attention.self_attention.in_proj_bias', 'encoder.layers.3.self_attention.self_attention.out_proj.weight', 'encoder.layers.3.self_attention.self_attention.out_proj.bias', 'encoder.layers.3.ln_2.weight', 'encoder.layers.3.ln_2.bias', 'encoder.layers.3.mlp.fc1.weight', 'encoder.layers.3.mlp.fc1.bias', 'encoder.layers.3.mlp.fc2.weight', 'encoder.layers.3.mlp.fc2.bias', 'encoder.layers.4.ln_1.weight', 'encoder.layers.4.ln_1.bias', 'encoder.layers.4.self_attention.self_attention.in_proj_weight', 'encoder.layers.4.self_attention.self_attention.in_proj_bias', 'encoder.layers.4.self_attention.self_attention.out_proj.weight', 'encoder.layers.4.self_attention.self_attention.out_proj.bias', 'encoder.layers.4.ln_2.weight', 'encoder.layers.4.ln_2.bias', 'encoder.layers.4.mlp.fc1.weight', 'encoder.layers.4.mlp.fc1.bias', 'encoder.layers.4.mlp.fc2.weight', 'encoder.layers.4.mlp.fc2.bias', 'encoder.layers.5.ln_1.weight', 'encoder.layers.5.ln_1.bias', 'encoder.layers.5.self_attention.self_attention.in_proj_weight', 'encoder.layers.5.self_attention.self_attention.in_proj_bias', 'encoder.layers.5.self_attention.self_attention.out_proj.weight', 'encoder.layers.5.self_attention.self_attention.out_proj.bias', 'encoder.layers.5.ln_2.weight', 'encoder.layers.5.ln_2.bias', 'encoder.layers.5.mlp.fc1.weight', 'encoder.layers.5.mlp.fc1.bias', 'encoder.layers.5.mlp.fc2.weight', 'encoder.layers.5.mlp.fc2.bias', 'encoder.layers.6.ln_1.weight', 'encoder.layers.6.ln_1.bias', 'encoder.layers.6.self_attention.self_attention.in_proj_weight', 'encoder.layers.6.self_attention.self_attention.in_proj_bias', 'encoder.layers.6.self_attention.self_attention.out_proj.weight', 'encoder.layers.6.self_attention.self_attention.out_proj.bias', 'encoder.layers.6.ln_2.weight', 'encoder.layers.6.ln_2.bias', 'encoder.layers.6.mlp.fc1.weight', 'encoder.layers.6.mlp.fc1.bias', 'encoder.layers.6.mlp.fc2.weight', 'encoder.layers.6.mlp.fc2.bias', 'encoder.layers.7.ln_1.weight', 'encoder.layers.7.ln_1.bias', 'encoder.layers.7.self_attention.self_attention.in_proj_weight', 'encoder.layers.7.self_attention.self_attention.in_proj_bias', 'encoder.layers.7.self_attention.self_attention.out_proj.weight', 'encoder.layers.7.self_attention.self_attention.out_proj.bias', 'encoder.layers.7.ln_2.weight', 'encoder.layers.7.ln_2.bias', 'encoder.layers.7.mlp.fc1.weight', 'encoder.layers.7.mlp.fc1.bias', 'encoder.layers.7.mlp.fc2.weight', 'encoder.layers.7.mlp.fc2.bias', 'encoder.layers.8.ln_1.weight', 'encoder.layers.8.ln_1.bias', 'encoder.layers.8.self_attention.self_attention.in_proj_weight', 'encoder.layers.8.self_attention.self_attention.in_proj_bias', 'encoder.layers.8.self_attention.self_attention.out_proj.weight', 'encoder.layers.8.self_attention.self_attention.out_proj.bias', 'encoder.layers.8.ln_2.weight', 'encoder.layers.8.ln_2.bias', 'encoder.layers.8.mlp.fc1.weight', 'encoder.layers.8.mlp.fc1.bias', 'encoder.layers.8.mlp.fc2.weight', 'encoder.layers.8.mlp.fc2.bias', 'encoder.layers.9.ln_1.weight', 'encoder.layers.9.ln_1.bias', 'encoder.layers.9.self_attention.self_attention.in_proj_weight', 'encoder.layers.9.self_attention.self_attention.in_proj_bias', 'encoder.layers.9.self_attention.self_attention.out_proj.weight', 'encoder.layers.9.self_attention.self_attention.out_proj.bias', 'encoder.layers.9.ln_2.weight', 'encoder.layers.9.ln_2.bias', 'encoder.layers.9.mlp.fc1.weight', 'encoder.layers.9.mlp.fc1.bias', 'encoder.layers.9.mlp.fc2.weight', 'encoder.layers.9.mlp.fc2.bias', 'encoder.layers.10.ln_1.weight', 'encoder.layers.10.ln_1.bias', 'encoder.layers.10.self_attention.self_attention.in_proj_weight', 'encoder.layers.10.self_attention.self_attention.in_proj_bias', 'encoder.layers.10.self_attention.self_attention.out_proj.weight', 'encoder.layers.10.self_attention.self_attention.out_proj.bias', 'encoder.layers.10.ln_2.weight', 'encoder.layers.10.ln_2.bias', 'encoder.layers.10.mlp.fc1.weight', 'encoder.layers.10.mlp.fc1.bias', 'encoder.layers.10.mlp.fc2.weight', 'encoder.layers.10.mlp.fc2.bias', 'encoder.layers.11.ln_1.weight', 'encoder.layers.11.ln_1.bias', 'encoder.layers.11.self_attention.self_attention.in_proj_weight', 'encoder.layers.11.self_attention.self_attention.in_proj_bias', 'encoder.layers.11.self_attention.self_attention.out_proj.weight', 'encoder.layers.11.self_attention.self_attention.out_proj.bias', 'encoder.layers.11.ln_2.weight', 'encoder.layers.11.ln_2.bias', 'encoder.layers.11.mlp.fc1.weight', 'encoder.layers.11.mlp.fc1.bias', 'encoder.layers.11.mlp.fc2.weight', 'encoder.layers.11.mlp.fc2.bias', 'encoder.ln.weight', 'encoder.ln.bias']
Using cache found in /home/studio-lab-user/.cache/torch/hub/facebookresearch_deit_main
Error executing job with overrides: []
Traceback (most recent call last):
  File "/home/studio-lab-user/sagemaker-studiolab-notebooks/AdaViT/train/train.py", line 196, in train
    train_epoch(model, train_loader, optimizer, epoch)
  File "/home/studio-lab-user/sagemaker-studiolab-notebooks/AdaViT/train/train.py", line 103, in train_epoch
    if  training_args['train_budget'] and hasattr(model, 'set_budget'):
omegaconf.errors.ConfigKeyError: Key 'train_budget' is not in struct
    full_key: training.train_budget
    object_type=dict
Set the environment variable HYDRA_FULL_ERROR=1 for a complete stack trace.