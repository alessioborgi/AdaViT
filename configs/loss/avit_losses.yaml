classification_loss:
    _target_: torch.nn.CrossEntropyLoss

# additional losses are optional and are used to regularize the model
# they can be used for moes or residual models
# for more info see peekvit/losses.py
additional_losses:
    # Univariate Approach
    # distr_prior_loss:
    #    _target_:  AdaViT.utils.losses.AViTDPriorLoss
    #   target_depth: 7
    #   weight: 0.1
    #   scaling: 1
    
    # Multivariate Approach
    distr_prior_loss:
        _target_:  AdaViT.utils.losses.AViTDPriorLoss
        target_depth: [5, 10]
        weight: 0.1
        scaling: [1, 1]
        # Put either "id"(Identity), "hard"(Positive Correlation (Earlier Halting in Deeper Layers)) or "soft" (Negative Correlation (Later Halting in Deeper Layers))
        covariance_matrices: "soft"      
    ponder_loss:
        _target_:  AdaViT.utils.losses.AViTPonderLoss
        weight: 0.0005
